[tool.poetry]
name = "appmap"
version = "1.14.0"
description = "Create AppMap files by recording a Python application."
readme = "README.md"
authors = [
  "Alan Potter <alan@app.land>",
  "Viraj Kanwade <viraj.kanwade@forgeahead.io>",
  "Rafa≈Ç Rzepecki <rafal@app.land>"
]
homepage = "https://github.com/applandinc/appmap-python"
license = "MIT"
classifiers = [
        'Development Status :: 4 - Beta',
        'Framework :: Django',
        'Framework :: Django :: 2.2',
        'Framework :: Django :: 3.1',
        'Framework :: Flask',
        'Framework :: Pytest',
        'Intended Audience :: Developers',
        'Topic :: Software Development',
        'Topic :: Software Development :: Debuggers',
        'Topic :: Software Development :: Documentation'
]
include = ['appmap.pth']

packages = [
    { include = "appmap"}, {include = "_appmap" },
    { include = "appmap/wrapt/*.py", from="vendor/wrapt/src" }
]

[tool.poetry.dependencies]
# Please update the documentation if changing the supported python version
# https://github.com/applandinc/applandinc.github.io/blob/master/_docs/reference/appmap-python.md#supported-versions
python = "^3.7.2"
PyYAML = ">=5.3.0"
inflection = ">=0.3.0"
importlib-metadata = ">=0.8"
importlib-resources = "^5.4.0"
packaging = "^21.3"
# If you include "Django" as an optional dependency here, you'll be able to use
# poetry to install it in your dev environment. However, doing so causes poetry
# v1.2.0 to remove it from the virtualenv *created and managed by tox*, i.e. not
# your dev environment. 
# 
# So, if you'd like to run the tests outside of tox,
# you'll need to `pip install` the appropriate version of Django, e.g.
#   pip install django'>=3.2,<4.0'
#   pip install pytest-django

[tool.poetry.dev-dependencies]
httpretty = "^1.0.5"
pytest = "^6.1.2"
pytest-randomly = "^3.5.0"
pylint = "^2.6.0"
flake8 = "^3.8.4"
pyfakefs = "^4.3.2"
pprintpp = ">=0.4.0"
coverage = "^5.3"
pytest-mock = "^3.5.1"
SQLAlchemy = { version = "^1.4.11", python = "^3.7"}
tox = "^3.22.0"
Twisted = "^22.4.0"
requests = "^2.25.1"
python-decouple = "^3.5"

[tool.poetry.group.dev.dependencies]
black = "^22.8.0"
isort = "^5.10.1"
pylint = "^2.16.1"

[build-system]
requires = ["poetry-core>=1.1.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.plugins."pytest11"]
appmap = "appmap.pytest"

[tool.poetry.scripts]
appmap-agent-init = "appmap.command.appmap_agent_init:run"
appmap-agent-status = "appmap.command.appmap_agent_status:run"
appmap-agent-validate = "appmap.command.appmap_agent_validate:run"

[tool.black]
extend-exclude = '''
/(
  | vendor
  | appmap/wrapt
)/
'''

[tool.isort]
profile = "black"
extend_skip = [
  "vendor",
  "appmap/wrapt"
  ]

